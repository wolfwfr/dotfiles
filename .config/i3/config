# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:System San Francisco Display 9

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock -c 04090e --nofork
# exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock -i ~/.config/i3/img/autumn-forest-blur.png --tiling --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# # Use pactl to adjust volume in PulseAudio.
# set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# custom
# Sreen brightness controls
bindsym XF86MonBrightnessUp exec brightnessctl set +5%
#bindsym XF86MonBrightnessUp exec xbacklight -inc 20 # increase screen brightness
#bindsym XF86MonBrightnessDown exec xbacklight -dec 20 # decrease screen brightness
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-

# Touchpad controls
bindsym XF86TouchpadToggle exec /some/path/toggletouchpad.sh # toggle touchpad

# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# end custom 

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec rofi -show run
# requires https://github.com/adi1090x/rofi
bindsym $mod+d exec --no-startup-id rofi \
    -monitor -1 -show drun -theme ~/.config/rofi/launchers/type-6/style-4.rasi
# requires https://github.com/erebe/greenclip
bindsym $mod+c exec --no-startup-id rofi \
    -monitor -1 -theme ~/.config/rofi/launchers/type-7/style-4.rasi -modi "clipboard:greenclip print" -show clipboard -run-command '{cmd}'

# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
# bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
# bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+o split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1: "
set $ws2 "2: "
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9: 󰒱"
set $ws10 "10: "

set $main "HDMI2"
set $laptop "eDP1"

# assign workspaces to monitor
workspace $ws1 output $main
workspace $ws2 output $main
workspace $ws3 output $main
workspace $ws4 output $main
workspace $ws5 output $main
workspace $ws6 output $laptop
workspace $ws7 output $laptop
workspace $ws8 output $laptop
workspace $ws9 output $laptop
workspace $ws10 output $laptop

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# switch to workspace with numpad
bindsym $mod+mod2+KP_1 workspace number $ws1
bindsym $mod+mod2+KP_2 workspace number $ws2
bindsym $mod+mod2+KP_3 workspace number $ws3
bindsym $mod+mod2+KP_4 workspace number $ws4
bindsym $mod+mod2+KP_5 workspace number $ws5
bindsym $mod+mod2+KP_6 workspace number $ws6
bindsym $mod+mod2+KP_7 workspace number $ws7
bindsym $mod+mod2+KP_8 workspace number $ws8
bindsym $mod+mod2+KP_9 workspace number $ws9
bindsym $mod+mod2+KP_0 workspace number $ws10

# move focused container to workspace with numpad
bindsym $mod+mod2+Shift+KP_1 move container to workspace number $ws1
bindsym $mod+mod2+Shift+KP_2 move container to workspace number $ws2
bindsym $mod+mod2+Shift+KP_3 move container to workspace number $ws3
bindsym $mod+mod2+Shift+KP_4 move container to workspace number $ws4
bindsym $mod+mod2+Shift+KP_5 move container to workspace number $ws5
bindsym $mod+mod2+Shift+KP_6 move container to workspace number $ws6
bindsym $mod+mod2+Shift+KP_7 move container to workspace number $ws7
bindsym $mod+mod2+Shift+KP_8 move container to workspace number $ws8
bindsym $mod+mod2+Shift+KP_9 move container to workspace number $ws9
bindsym $mod+mod2+Shift+KP_0 move container to workspace number $ws10

# move focused workspace between monitors
bindsym $mod+Ctrl+greater move workspace to output right
bindsym $mod+Ctrl+less move workspace to output left

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# yubikey shortcut
bindsym $mod+y exec /home/wolf/go/src/local/yubikey_aws_code/code.sh

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 5 px or 5 ppt
        bindsym j resize grow heigh 5 px or 5 ppt
        bindsym k resize shrink height 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt
        # bindsym semicolon resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 5 px or 5 ppt
        bindsym Down resize grow height 5 px or 5 ppt
        bindsym Up resize shrink height 5 px or 5 ppt
        bindsym Right resize grow width 5 px or 5 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# when (dis)connecting monitors, run xrandr & reload i3
bindsym $mod+shift+m exec xrandr --auto

# new stuff

for_window [class="Pavucontrol"] floating enable
for_window [urgent="latest"] focus
for_window [class="^.*"] border pixel 1

# set $bg-color 	         #2f343f
set $bg-color            #000000
set $inactive-bg-color   #000000
# set $active-bg-color     #2a2a37
set $active-bg-color     #f9b01e

# set $text-color          #f3f4f5
set $text-color          #DCD7BA
set $inactive-text-color #676E7D
set $urgent-bg-color     #E53935

# window colors
#                       border              background         text                 indicator
client.focused          $inactive-bg-color  $active-bg-color   $text-color          #00ff00
client.unfocused        $inactive-bg-color  $inactive-bg-color $inactive-text-color #00ff00
client.focused_inactive $inactive-bg-color  $inactive-bg-color $inactive-text-color #00ff00
client.urgent           $urgent-bg-color    $urgent-bg-color   $text-color          #00ff00

mouse_warping none
gaps inner 8
smart_gaps on
hide_edge_borders smart_no_gaps

# bar
# bar {
#   	status_command i3blocks -c /home/wolf/.config/i3/i3blocks.conf
#     # status_command i3status
# 	colors {
# 		background $bg-color
# 	    	# separator #757575
# 		#                  border             background         text
# 		focused_workspace  $active-bg-color   $active-bg-color   $text-color
# 		inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
# 		urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
# 	}
#     position top
# }

mode "exit: [l]ogout, s[u]spend, [r]eboot, [s]hutdown" {
  bindsym l exec i3-msg exit
  bindsym u exec systemctl suspend
  bindsym r exec systemctl reboot
  bindsym s exec systemctl poweroff
  bindsym k exec i3lock; mode "default"
  bindsym Escape mode "default"
  bindsym Return mode "default"
}

bindsym $mod+x mode "exit: [l]ogout, s[u]spend, [r]eboot, [s]hutdown"

bindsym $mod+shift+x exec i3lock

assign [class="kitty"] $ws1
assign [class="firefox"] $ws2
assign [class="Slack"] $ws9
assign [class="Spotify"] $ws10

exec /home/wolf/.local/kitty.app/bin/kitty
exec slack
exec spotify
exec firefox

# set background
exec_always feh --bg-scale /home/wolf/Pictures/Wallpapers/1399189217467.jpg
exec_always xrandr --output eDP1 --primary --mode 1920x1080 --pos 2560x360 --rotate normal --output DP1 --off --output DP2 --off --output HDMI1 --off --output HDMI2 --mode 2560x1440 --pos 0x0 --rotate normal --output VIRTUAL1 --off
exec_always numlockx on
exec_always --no-startup-id ~/.config/polybar/launch.sh &
exec_always --no-startup-id dunst -config ~/.config/dunst/dunstrc
exec_always --no-startup-id xset dpms 0 0 600
exec_always --no-startup-id greenclip daemon

# exec_always compton

